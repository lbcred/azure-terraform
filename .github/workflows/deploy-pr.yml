name: "Deploy PR environment"

on: pull_request

jobs:
  detect_changes:
    name: "Detect changes"
    runs-on: ubuntu-latest
    steps:
      - uses: dorny/paths-filter@v2.10.1
        id: changes
        with:
          filters: |
            pipelines:
              - '.github/workflows/**'
            tf_b2c:
              - 'terraform/**'

    outputs:
      has_pipeline_changes: ${{ steps.changes.outputs.pipelines }}
      has_b2c_changes: ${{ steps.changes.outputs.tf_b2c }}

  derive_environment_prefix:
    name: "Derive environment prefix"
    runs-on: ubuntu-latest
    steps:
      # Use the first 7 chars of the hash of the branch name
      - name: "Derive environment prefix"
        id: derive-prefix
        shell: bash
        run: echo "::set-output name=sha-subset::$(echo ${{ github.head_ref }} | md5sum | awk '{print tolower(substr( $0, 1, 7))}')"

    outputs:
      prefix: ${{ steps.derive-prefix.outputs.sha-subset }}

  deploy_b2c_terraform:
    name: "Deploy B2C Application"
    if: needs.detect_changes.outputs.has_tf_b2c_changes == 'true'
    runs-on: ubuntu-latest
    needs:
      - detect_changes
      - derive_environment_prefix

    defaults:
      run:
        working-directory: ./terraform/
    env:
      ARM_CLIENT_ID: ${{ secrets.NON_PROD_ARM_CLIENT_ID }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.7
          terraform_wrapper: false

      - name: "Terraform Init"
        run: |
          terraform init -lock-timeout=15m

      - name: "Terraform Validate"
        run: terraform validate -no-color

      - name: "Terraform Plan"
        id: rg-plan
        run: |
          terraform plan \
            -lock-timeout=15m \
            -var-file="./var-files/dev.tfvars" \
            -out="dev-rg-plan.tfplan"

        env:
          TF_VAR_environment_prefix: ${{ needs.derive_environment_prefix.outputs.prefix }}

      - name: "Copy TF plan to reports dir"
        if: always()
        run: |
          mkdir -p ../../terraform_plans/dev
          cp dev-rg-plan.tfplan ../../terraform_plans/dev

      - name: "Upload Terraform plan"
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: reports
          retention-days: 5
          path: |
            **/terraform_plans

      - name: "Terraform Apply"
        run: |
          terraform apply \
            -lock-timeout=15m \
            -auto-approve \
            dev-rg-plan.tfplan
